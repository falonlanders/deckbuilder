{"ast":null,"code":"import _toConsumableArray from\"/Users/falonlanders/Desktop/Fullstack/Project_16/Deckbuilder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/falonlanders/Desktop/Fullstack/Project_16/Deckbuilder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ReactDOM from'react-dom';import{SearchBar,SearchResults,DeckList}from'./components';import'./Style.css';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),results=_useState2[0],setResults=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),deck=_useState4[0],setDeck=_useState4[1];var addCardToDeck=function addCardToDeck(_ref){var id=_ref.id,name=_ref.name;var nextDeck=_toConsumableArray(deck);var index=nextDeck.findIndex(function(card){return card.id===id;});if(index>-1){nextDeck[index].count+=1;}else{nextDeck.push({id:id,name:name,count:1});}setDeck(nextDeck);};var removeCardFromDeck=function removeCardFromDeck(_ref2){var id=_ref2.id;var nextDeck=_toConsumableArray(deck);var index=nextDeck.findIndex(function(card){return card.id===id;});if(index===-1){return;}if(nextDeck[index].count===1){nextDeck.splice(index,1);}else{nextDeck[index].count-=1;}setDeck(nextDeck);};return/*#__PURE__*/React.createElement(\"div\",{id:\"app\"},/*#__PURE__*/React.createElement(SearchBar,{setResults:setResults}),/*#__PURE__*/React.createElement(SearchResults,{results:results,addCardToDeck:addCardToDeck,removeCardFromDeck:removeCardFromDeck}),/*#__PURE__*/React.createElement(DeckList,{deck:deck}));};ReactDOM.render(/*#__PURE__*/React.createElement(App,null),document.getElementById('root'));","map":{"version":3,"sources":["/Users/falonlanders/Desktop/Fullstack/Project_16/Deckbuilder/src/index.js"],"names":["React","useState","ReactDOM","SearchBar","SearchResults","DeckList","App","results","setResults","deck","setDeck","addCardToDeck","id","name","nextDeck","index","findIndex","card","count","push","removeCardFromDeck","splice","render","document","getElementById"],"mappings":"8WAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAASC,SAAT,CAAoBC,aAApB,CAAmCC,QAAnC,KAAmD,cAAnD,CACA,MAAO,aAAP,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACgBL,QAAQ,CAAC,EAAD,CADxB,wCACPM,OADO,eACEC,UADF,8BAEUP,QAAQ,CAAC,EAAD,CAFlB,yCAEPQ,IAFO,eAEDC,OAFC,eAId,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,EAAe,MAAfA,EAAe,CAAXC,IAAW,MAAXA,IAAW,CACpC,GAAMC,CAAAA,QAAQ,oBAAOL,IAAP,CAAd,CACA,GAAMM,CAAAA,KAAK,CAAGD,QAAQ,CAACE,SAAT,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACL,EAAL,GAAYA,EAAhB,EAAvB,CAAd,CAEA,GAAIG,KAAK,CAAG,CAAC,CAAb,CAAgB,CACZD,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,EAAyB,CAAzB,CACH,CAFD,IAEO,CACHJ,QAAQ,CAACK,IAAT,CAAc,CACVP,EAAE,CAAFA,EADU,CAEVC,IAAI,CAAJA,IAFU,CAGVK,KAAK,CAAE,CAHG,CAAd,EAKH,CAEDR,OAAO,CAACI,QAAD,CAAP,CACH,CAfD,CAiBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAAY,IAATR,CAAAA,EAAS,OAATA,EAAS,CACnC,GAAME,CAAAA,QAAQ,oBAAOL,IAAP,CAAd,CACA,GAAMM,CAAAA,KAAK,CAAGD,QAAQ,CAACE,SAAT,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACL,EAAL,GAAYA,EAAhB,EAAvB,CAAd,CAEA,GAAIG,KAAK,GAAK,CAAC,CAAf,CAAkB,CACd,OACH,CAED,GAAID,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,GAA0B,CAA9B,CAAiC,CAC7BJ,QAAQ,CAACO,MAAT,CAAgBN,KAAhB,CAAuB,CAAvB,EACH,CAFD,IAEO,CACHD,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,EAAyB,CAAzB,CACH,CAEDR,OAAO,CAACI,QAAD,CAAP,CACH,CAfD,CAiBA,mBACI,2BAAK,EAAE,CAAC,KAAR,eACI,oBAAC,SAAD,EAAW,UAAU,CAAEN,UAAvB,EADJ,cAEI,oBAAC,aAAD,EACI,OAAO,CAAED,OADb,CAEI,aAAa,CAAEI,aAFnB,CAGI,kBAAkB,CAAES,kBAHxB,EAFJ,cAMI,oBAAC,QAAD,EAAU,IAAI,CAAEX,IAAhB,EANJ,CADJ,CAUH,CAhDD,CAoDAP,QAAQ,CAACoB,MAAT,cACI,oBAAC,GAAD,MADJ,CAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { SearchBar, SearchResults, DeckList } from './components';\nimport './Style.css';\n\n\nconst App = () => {\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n\n    const addCardToDeck = ({ id, name }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            nextDeck[index].count += 1;\n        } else {\n            nextDeck.push({\n                id,\n                name,\n                count: 1\n            });\n        }\n\n        setDeck(nextDeck);\n    }\n\n    const removeCardFromDeck = ({ id }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index === -1) {\n            return;\n        }\n\n        if (nextDeck[index].count === 1) {\n            nextDeck.splice(index, 1);\n        } else {\n            nextDeck[index].count -= 1;\n        }\n\n        setDeck(nextDeck);\n    }\n\n    return (\n        <div id=\"app\">\n            <SearchBar setResults={setResults} />\n            <SearchResults\n                results={results}\n                addCardToDeck={addCardToDeck}\n                removeCardFromDeck={removeCardFromDeck} />\n            <DeckList deck={deck} />\n        </div>\n    );\n}\n\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}