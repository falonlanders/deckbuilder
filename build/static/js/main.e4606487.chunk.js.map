{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","types","axios","get","data","cards","fetchTypes","console","log","SearchBar","setResults","useState","setName","setText","setType","allTypes","setAllTypes","isLoading","setIsLoading","event","preventDefault","useEffect","id","onSubmit","className","type","placeholder","value","onChange","target","disabled","selected","hidden","map","index","key","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","src","onClick","SearchResults","results","length","result","DeckList","deck","cardCount","reduce","card","count","class","App","setDeck","nextDeck","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4606487.chunk.js","sourcesContent":["import axios from 'axios';\nimport './index.css';\n\nexport async function fetchCards({ name, text, types }) {\n    try {\n        const { data } = await axios.get(\n            `https://api.magicthegathering.io/v1/cards?name=${name}&text=${text}&types=${types}`\n        );\n\n        return data.cards || [];\n    } catch (error) {\n        throw error;\n    }\n}\n\nexport async function fetchTypes() {\n    try {\n        const { data } = await axios.get(\n            `https://api.magicthegathering.io/v1/types`\n        );\n        console.log(data)\n        return data.types || [];\n    } catch (error) {\n        throw error;\n    }\n}","import React, { useState, Component, useEffect } from 'react';\nimport {\n    fetchCards, fetchTypes,\n} from '../api';\nimport './Search.css';\n\n\nconst SearchBar = ({ setResults }) => {\n    const [name, setName] = useState('');\n    const [text, setText] = useState('');\n    //set type in search\n    const [types, setType] = useState('');\n    //creating dropdown\n    const [allTypes, setAllTypes] = useState([]);\n    //slow api.....\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleNameChange = event => {\n        setName(event.target.value);\n    }\n    const handleTextChange = event => {\n        setText(event.target.value);\n    }\n\n    const handleDropdown = event => {\n        setType(event.target.value);\n    }\n\n    useEffect(async () => {\n        setIsLoading(true);\n        setAllTypes(await fetchTypes());\n        setIsLoading(false);\n    }, []);\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        const cards = await fetchCards({\n            name,\n            text,\n            types,\n        });\n        setResults(cards);\n    }\n\n    return (\n        <div id=\"search\">\n            <h3>Look up cards here...</h3>\n            <form onSubmit={handleSubmit}>\n                <input className=\"searchBar\"\n                    type=\"text\"\n                    placeholder=\"card name\"\n                    value={name}\n                    onChange={handleNameChange} />\n                <input className=\"searchBar\"\n                    type=\"text\"\n                    placeholder=\"card text\"\n                    value={text}\n                    onChange={handleTextChange} />\n                {\n                    isLoading ? <select className=\"dropdown\">\n                        <option value=\"\" disabled selected hidden>select a type</option>\n                    </select>\n                        : <select onChange={handleDropdown}>\n                            <option value=\"\" disabled selected hidden>select a type</option>\n                            {allTypes.map((type, index) => {\n                                return <option key={index} value={type}>{type}</option>\n                            })\n                            }\n                        </select>\n                }\n                <button id=\"searchButton\" type=\"submit\">Search</button>\n            </form >\n        </div >\n    );\n}\n\n\n\nexport default SearchBar;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = ({\n    id,\n    name,\n    type,\n    manaCost,\n    text,\n    flavor,\n    imageUrl,\n    addCardToDeck,\n    removeCardFromDeck\n}) => {\n    return (\n        <div className=\"Card\">\n            <div className=\"info\">\n                <p className=\"header\">\n                    {name} - {manaCost}\n                </p>\n                <p className=\"type\">\n                    {type}\n                </p>\n                <p className=\"text\">\n                    {text}\n                </p>\n                <p className=\"flavor\">\n                    {flavor}\n                </p>\n            </div>\n            <img className=\"preview\" src={imageUrl} />\n            <div className=\"actions\">\n                <button className=\"glow-on-hover\"\n                    onClick={() => {\n                        addCardToDeck({\n                            id,\n                            name\n                        })\n                    }}>\n                    (+) Add To Deck\n          </button>\n                <button className=\"glow-on-hover\"\n                    onClick={() => {\n                        removeCardFromDeck({\n                            id\n                        })\n                    }}>\n                    (-) Remove From Deck\n        </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport './SearchResults.css';\n\nconst SearchResults = ({\n    results,\n    addCardToDeck,\n    removeCardFromDeck\n}) => {\n    return (\n        <div id=\"results\">\n            <h3>Here's what we found ({results.length} results):</h3>\n            <div className=\"CardList\">\n                {\n                    results.map(result => (\n                        <Card\n                            key={result.id}\n                            addCardToDeck={addCardToDeck}\n                            removeCardFromDeck={removeCardFromDeck}\n                            {...result} />\n                    ))\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResults;","import React from 'react';\nimport './Deck.css';\n\nconst DeckList = ({\n    deck,\n    addCardToDeck,\n    removeCardFromDeck\n}) => {\n    let cardCount = deck.reduce((cardCount, card) => {\n        return cardCount + card.count\n    }, 0);\n\n    return (\n        <div id=\"deck\">\n            <h3>Your deck so far ({cardCount} cards):</h3>\n            <div className=\"DeckList\">\n                {deck.map(({ id, name, count }) => (\n                    <p key={id}>\n                        <span>\n                            ({count}x) {name}\n                        </span><br />\n                        <button class=\"plusMinus\" onClick={\n                            () => addCardToDeck({ id, name })\n                        }> + </button>\n                        <button class=\"plusMinus\" onClick={\n                            () => removeCardFromDeck({ id })\n                        }> - </button>\n                    </p>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default DeckList;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { SearchBar, SearchResults, DeckList } from './components';\nimport './Style.css';\n\n\nconst App = () => {\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n\n    const addCardToDeck = ({ id, name }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            nextDeck[index].count += 1;\n        } else {\n            nextDeck.push({\n                id,\n                name,\n                count: 1\n            });\n        }\n\n        setDeck(nextDeck);\n    }\n\n    const removeCardFromDeck = ({ id }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index === -1) {\n            return;\n        }\n\n        if (nextDeck[index].count === 1) {\n            nextDeck.splice(index, 1);\n        } else {\n            nextDeck[index].count -= 1;\n        }\n\n        setDeck(nextDeck);\n    }\n\n    return (\n        <div id=\"app\">\n            <SearchBar setResults={setResults} />\n            <SearchResults\n                results={results}\n                addCardToDeck={addCardToDeck}\n                removeCardFromDeck={removeCardFromDeck} />\n            <DeckList deck={deck} />\n        </div>\n    );\n}\n\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}